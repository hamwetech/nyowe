# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-02-07 01:59
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0001_initial'),
        ('coop', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('conf', '0001_initial'),
        ('partner', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MemberPurchaseTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coop.CooperativeMember')),
            ],
            options={
                'db_table': 'member_purchase_transaction',
            },
        ),
        migrations.CreateModel(
            name='PartnerPurchaseTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('partner_staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partner.PartnerStaff')),
            ],
            options={
                'db_table': 'partner_purchase_transaction',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchaser', models.CharField(blank=True, choices=[('PARTNER', 'PARTNER'), ('COOP', 'COOP'), ('UNDEFINED', 'UNDEFINED')], default='UNDEFINED', max_length=10)),
                ('transaction_id', models.CharField(blank=True, max_length=150, null=True)),
                ('bill_of_sale', models.CharField(blank=True, max_length=124, null=True)),
                ('seller_name', models.CharField(max_length=254)),
                ('seller_msisdn', models.CharField(max_length=25)),
                ('farm_name', models.CharField(blank=True, max_length=124, null=True)),
                ('address', models.CharField(blank=True, max_length=124, null=True)),
                ('town', models.CharField(blank=True, max_length=124, null=True)),
                ('gps_coodinates', models.CharField(blank=True, max_length=124, null=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20)),
                ('paid_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20)),
                ('farmer_verification', models.BooleanField(default=0)),
                ('witness_name', models.CharField(blank=True, max_length=125, null=True)),
                ('witness_msisdn', models.CharField(blank=True, max_length=25, null=True)),
                ('witness_verification', models.BooleanField(default=0)),
                ('transaction_date', models.DateTimeField()),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('cooperative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coop.Cooperative')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conf.District')),
            ],
            options={
                'db_table': 'purchase',
            },
        ),
        migrations.CreateModel(
            name='PurchasePaymentLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=254)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('indicator', models.TextField(blank=True, null=True)),
                ('indicator_file', models.FileField(blank=True, null=True, upload_to='purchase/document/')),
                ('transaction_date', models.DateTimeField()),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='operations.Purchase')),
                ('transaction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conf.PaymentMethod')),
            ],
            options={
                'db_table': 'purchase_payment_log',
            },
        ),
        migrations.CreateModel(
            name='PurchaseProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField()),
                ('identification', models.CharField(blank=True, max_length=124, null=True)),
                ('coat_color', models.CharField(blank=True, max_length=124, null=True)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Weight')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('paid_amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('breed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.ProductVariation')),
                ('purchase', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='operations.Purchase')),
            ],
            options={
                'db_table': 'purchase_product',
            },
        ),
        migrations.CreateModel(
            name='PurchaseVerification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seller_code', models.CharField(max_length=10)),
                ('sc_attemps', models.PositiveIntegerField()),
                ('sc_used', models.BooleanField(default=0)),
                ('sc_entry_date', models.DateTimeField(blank=True, null=True)),
                ('withness_code', models.CharField(max_length=10)),
                ('witness_code', models.CharField(max_length=10)),
                ('wc_attemps', models.PositiveIntegerField()),
                ('wc_used', models.BooleanField(default=0)),
                ('wc_entry_date', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='operations.Purchase')),
            ],
            options={
                'db_table': 'purchase_verification',
            },
        ),
        migrations.AddField(
            model_name='partnerpurchasetransaction',
            name='purchase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='operations.Purchase'),
        ),
        migrations.AddField(
            model_name='memberpurchasetransaction',
            name='purchase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='operations.Purchase'),
        ),
    ]
